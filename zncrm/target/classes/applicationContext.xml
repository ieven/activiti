<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans.xsd 
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context.xsd 
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx.xsd
          http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- 配置扫描的包 -->
	<context:component-scan base-package="com.hxkj.zncrm.*" />

	<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://localhost:3306/zncrm?characterEncoding=UTF-8" />
		<property name="username" value="root" />
		<property name="password" value="root" />
		<!--连接池启动时的初始值 -->
		<property name="initialSize" value="10" />
		<!--连接池的最大值 -->
		<property name="maxActive" value="100" />
		<!--最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部 分，一直减少到maxIdle为止 -->
		<property name="maxIdle" value="50" />
		<!--最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时 来不及申请 -->
		<property name="minIdle" value="10" />
		<!--给出一条简单的sql语句进行验证 -->
		<property name="validationQuery" value="select 1 from dual" />
		<!--在取出连接时进行有效验证 -->
		<property name="testOnBorrow" value="true" />
		<property name="removeAbandonedTimeout" value="120" />
		<property name="removeAbandoned" value="true" />
		<!--#运行判断连接超时任务的时间间隔，单位为毫秒，默认为-1，即不执行任务. -->
		<property name="timeBetweenEvictionRunsMillis" value="3600000" />
		<!--#连接的超时时间，默认为半小时。 -->
		<property name="minEvictableIdleTimeMillis" value="3600000" />
	</bean>
	<!-- 配置mybatisSqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.hxkj.zncrm.dao.domain" />
	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.hxkj.zncrm.dao.mapper" />
	</bean>
	<!-- 配置SqlSessionTemplate -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate"
		scope="prototype">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	<!-- 事务配置 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 使用annotation注解方式配置事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>

	<bean name="mPusher" class="com.hxkj.zncrm.util.Pusher">
		<constructor-arg name="appKey" value="0520041b34fefe45a504640f"></constructor-arg>
		<constructor-arg name="masterSecret" value="aaafb275e9451dd0f12fdefd"></constructor-arg>
	</bean>

</beans>